name: Build and Push Docker Image. Deploy to Azure.
on:
  push:
    branches:
      - main
      - ci-cd
  pull_request:
    branches:
      - main
      - ci-cd

jobs:
  publish:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set environment variables
        run: |
          echo "GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}" >> $GITHUB_ENV
          echo "GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}" >> $GITHUB_ENV

      - name: Create env.properties file
        run: |
          echo "GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}" > backend/src/main/resources/env.properties
          echo "GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}" >> backend/src/main/resources/env.properties

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Angular CLI
        run: npm install -g @angular/cli
        working-directory: ./frontend

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build Angular project
        run: ng build --configuration production
        working-directory: ./frontend

      - name: Copy Angular build to backend static folder
        run: cp -r frontend/dist/frontend/browser/* backend/src/main/resources/static/

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "18"

      - name: Convert line endings to Unix format
        run: sed -i 's/\r$//' backend/mvnw

      - name: Make mvnw executable
        run: chmod +x backend/mvnw

      - name: Build backend with Maven
        run: ./mvnw clean package -DskipTests -P local
        working-directory: ./backend

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/bookmarks-forums:${{ github.sha }} -f Dockerfile ../
        working-directory: ./docker

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/bookmarks-forums:${{ github.sha }}
        working-directory: ./docker

    outputs:
      tag: ${{ github.sha }}

  deploy:
    needs: publish
    runs-on: ubuntu-22.04
    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_GROUP }} \
            --name bookmarks-forums \
            --image ${{ secrets.DOCKERHUB_USERNAME }}/bookmarks-forums:${{ needs.publish.outputs.tag }} \
            --dns-name-label bookmarks-forums-app \
            --registry-login-server index.docker.io \
            --registry-username ${{ secrets.DOCKERHUB_USERNAME }} \
            --registry-password ${{ secrets.DOCKERHUB_AZURE_TOKEN }} \
            --ports 443 \
            --os-type Linux \
            --cpu 1 \
            --memory 1.5 \
            --environment-variables \
              SPRING_DATASOURCE_URL="jdbc:mysql://bookmarks-forums-database.mysql.database.azure.com:3306/bookmarks-forums-db?useSSL=true" \
              SPRING_DATASOURCE_USERNAME="${{ secrets.DATABASE_USERNAME }}" \
              SPRING_DATASOURCE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}" \
              RUNNING_IN_DOCKER="true" \
              SERVER_PORT=443

