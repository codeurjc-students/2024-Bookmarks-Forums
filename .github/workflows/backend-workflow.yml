name: Backend tests
# This will run all the tests in backend/src/test/java/com/example/backend/rest using JDK 18

on:
  push:
    branches:
      - main
      - ci-cd
      - feature-chats
  pull_request:
    branches:
      - main
      - ci-cd
      - feature-chats
jobs:
  rest-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 18
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '18'

      - name: Set up Docker (database container setup)
        run: sudo docker run -d --name bookmarks-forums-DB-GitHub-actions -p 3306:3306 -e MYSQL_DATABASE=BFDB -e MYSQL_ROOT_PASSWORD=password mysql:8.3.0

      - name: Install Dockerize
        run: |
          curl -sSL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | sudo tar -C /usr/local/bin -xzv

      - name: Wait for MySQL to start
        run: dockerize -wait tcp://localhost:3306 -timeout 1m

      - name: Set environment variables
        run: |
          echo "GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}" >> $GITHUB_ENV
          echo "GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}" >> $GITHUB_ENV

      - name: Create env.properties file
        run: |
          echo "GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}" > backend/src/main/resources/env.properties
          echo "GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}" >> backend/src/main/resources/env.properties

      - name: Convert line endings to Unix format
        run: sed -i 's/\r$//' backend/mvnw

      - name: Make mvnw executable
        run: chmod +x backend/mvnw

      - name: Build with Maven
        run: backend/mvnw -B package --file backend/pom.xml -DskipTests

      - name: Check application logs
        run: sudo docker logs $(sudo docker ps -q --filter "name=bookmarks-forums-DB-GitHub-actions")

      - name: Run REST tests
        run: backend/mvnw test -P rest-tests --file backend/pom.xml